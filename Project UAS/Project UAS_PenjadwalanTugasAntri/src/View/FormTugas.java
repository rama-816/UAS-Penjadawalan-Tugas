/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package View;
import Controller.KategoriController;
import Controller.TugasController;
import akses.DatabaseConnection;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.KategoriTugas;
import model.Tugas;

/**
 *
 * @author nicho
 */
public class FormTugas extends javax.swing.JFrame {
    private javax.swing.JLabel lblNamaTugas;
    private javax.swing.JLabel lblDeskripsi;
    private javax.swing.JScrollPane scrDeskripsi;
    private javax.swing.JTextArea txtADeskripsi;
    private javax.swing.JLabel lblKategori;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JLabel lblTanggalTenggat;
    private javax.swing.JTextField txtTanggalTenggat;
    private javax.swing.JButton btnReset;
    private javax.swing.JScrollPane scrTabelTugas;
    private TugasController tugasController;
    private KategoriController kategoriController;

    /**
     * Creates new form FormTugas
     */
    public FormTugas() {
        initComponents();
        System.out.println("initComponents() selesai.");
        tugasController = new TugasController();
        kategoriController = new KategoriController();
        loadKategoriToComboBox();
        tampilDataTugas();
        System.out.println("Data kategori dimuat.");
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNamaTugas = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cmbKategori = new javax.swing.JComboBox();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        btnSimpan = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTugas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setText("FORM TUGAS");

        jLabel4.setText("NAMA TUGAS :");

        jLabel5.setText("KATEGORI :");

        jLabel6.setText("DEADLINE :");

        cmbKategori.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tugas UAS", "Tugas Besar" }));

        btnSimpan.setText("SIMPAN");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnEdit.setText("EDIT");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnHapus.setText("HAPUS");

        tblTugas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTugas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(157, 157, 157)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnEdit)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnHapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel4)
                                    .addComponent(txtNamaTugas, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbKategori, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(jFormattedTextField1)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 13, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNamaTugas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSimpan)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEdit)
                        .addComponent(btnHapus)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void tampilDataTugas() {
        DefaultTableModel model = (DefaultTableModel) tblTugas.getModel();
        model.setRowCount(0);

        List<Tugas> listTugas = tugasController.getAllTugas();
        for (Tugas tugas : listTugas) {
            String kategoriNama = (tugas.getKategori() != null) ? tugas.getKategori().getNamaKategori() : "Tidak Ada";
            model.addRow(new Object[]{
                tugas.getIdTugas(),
                tugas.getJudulTugas(),
                tugas.getDeskripsiTugas(),
                kategoriNama,
                tugas.getStatusTugas(),
                tugas.getBatasWaktu()
            });
        }
    }

    private void loadKategoriToComboBox() {
        List<KategoriTugas> listKategori = kategoriController.getAllKategori();
        
        Vector<String> items = new Vector<>();
        items.add("Pilih Kategori");
        for (KategoriTugas kt : listKategori) {
            items.add(kt.getNamaKategori());
        }
        cmbKategori.setModel(new javax.swing.DefaultComboBoxModel<>(items));
    }

    private KategoriTugas getSelectedKategoriFromComboBox() {
        String selectedNamaKategori = (String) cmbKategori.getSelectedItem();
        if (selectedNamaKategori == null || selectedNamaKategori.equals("Pilih Kategori")) {
            return null;
        }
        List<KategoriTugas> allKategori = kategoriController.getAllKategori();
        for (KategoriTugas kt : allKategori) {
            if (kt.getNamaKategori().equals(selectedNamaKategori)) {
                return kt;
            }
        }
        return null;
    }

    private void resetForm(List<KategoriTugas> list) {
        System.out.println("Memasuki resetForm()");
        txtNamaTugas.setText("");
        txtADeskripsi.setText("");
        if(cmbKategori!=null)cmbKategori.setSelectedIndex(0);
        if(cmbStatus!=null)cmbStatus.setSelectedIndex(0);
        txtTanggalTenggat.setText("");
        if(tblTugas!=null)tblTugas.clearSelection();
        if (cmbKategori != null && cmbKategori.getModel() instanceof DefaultComboBoxModel) {
        DefaultComboBoxModel<String> model = (DefaultComboBoxModel<String>) cmbKategori.getModel();
        model.removeAllElements();
        if (null != list) {
            list.stream().forEach((kategori) -> {
                model.addElement(kategori.getNamaKategori());
            });
        } else {
        System.err.println("Objek kategori null dalam list!");
        }
    }
    }  
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblTugas.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih tugas yang ingin diedit!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int idTugas = (int) tblTugas.getModel().getValueAt(selectedRow, 0);
        String namaTugasBaru = txtNamaTugas.getText();
        String deskripsiBaru = txtADeskripsi.getText();
        KategoriTugas kategoriBaru = getSelectedKategoriFromComboBox();
        String statusBaru = (String) cmbStatus.getSelectedItem();
        String batasWaktuStr = txtTanggalTenggat.getText();
        
        java.util.Date batasWaktuDate = null;
        if (batasWaktuStr != null && !batasWaktuStr.isEmpty()) {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            batasWaktuDate = sdf.parse(batasWaktuStr);
        } catch (java.text.ParseException ex) {
            JOptionPane.showMessageDialog(this,
                    "Format tanggal tenggat tidak valid. Gunakan format YYYY-MM-DD.",
                    "Validasi Error", JOptionPane.WARNING_MESSAGE);
            return; 
        }
    }
        
        
        if (namaTugasBaru.isEmpty() || deskripsiBaru.isEmpty() || kategoriBaru == null || statusBaru == null || batasWaktuStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi!", "Validasi Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Tugas updatedTugas = new Tugas();
        updatedTugas.setJudulTugas(namaTugasBaru);
        updatedTugas.setDeskripsiTugas(deskripsiBaru);
        updatedTugas.setKategori(kategoriBaru);
        updatedTugas.setStatusTugas(statusBaru);
        updatedTugas.setBatasWaktu(batasWaktuDate);

        boolean success = tugasController.updateTugas(updatedTugas);
        if (success) {
            JOptionPane.showMessageDialog(this, "Tugas berhasil diupdate!");
            tampilDataTugas();
        } else {
            JOptionPane.showMessageDialog(this, "Gagal mengupdate tugas.");
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        String namaTugas = txtNamaTugas.getText();
        String deskripsi = txtADeskripsi.getText();
        KategoriTugas kategori = getSelectedKategoriFromComboBox();
        String status = (String) cmbStatus.getSelectedItem();
        String batasWaktuStr = txtTanggalTenggat.getText();
        
        java.util.Date batasWaktuDate = null;
        if (batasWaktuStr != null && !batasWaktuStr.isEmpty()) {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            batasWaktuDate = sdf.parse(batasWaktuStr);
        } catch (java.text.ParseException ex) {
            JOptionPane.showMessageDialog(this,
                    "Format tanggal tenggat tidak valid. Gunakan format YYYY-MM-DD.",
                    "Validasi Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }

        if (namaTugas.isEmpty() || deskripsi.isEmpty() || kategori == null || status == null || batasWaktuStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi!", "Validasi Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Tugas newTugas = new Tugas();
        newTugas.setJudulTugas(namaTugas);
        newTugas.setDeskripsiTugas(deskripsi);
        newTugas.setKategori(kategori);
        newTugas.setStatusTugas(status);
        newTugas.setBatasWaktu(batasWaktuDate);

        boolean success = tugasController.saveTugas(newTugas);
        if (success) {
            JOptionPane.showMessageDialog(this, "Tugas berhasil disimpan!");
            tampilDataTugas();
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan tugas.");
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormTugas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormTugas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormTugas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormTugas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormTugas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JComboBox cmbKategori;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTugas;
    private javax.swing.JTextField txtNamaTugas;
    // End of variables declaration//GEN-END:variables
}
